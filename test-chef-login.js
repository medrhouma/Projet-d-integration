// Script de test pour v√©rifier le login d'un chef de d√©partement

async function testChefLogin() {
  console.log('üß™ Test de connexion Chef de D√©partement\n');
  
  // Test 1: Cr√©er un chef de d√©partement
  console.log('1Ô∏è‚É£ Cr√©ation d\'un chef de d√©partement...');
  
  const createResponse = await fetch('http://localhost:3000/api/enseignants', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      nom: "Chef",
      prenom: "Test",
      email: "chef.test@ecole.tn",
      identifiant: "chef_test",
      mot_de_passe: "test1234",
      matricule: "CHEF001",
      id_departement: 1,
      est_chef_departement: true
    })
  });
  
  const createData = await createResponse.json();
  
  if (createResponse.ok) {
    console.log('‚úÖ Chef cr√©√© avec succ√®s!');
    console.log('   ID:', createData.id_enseignant);
    console.log('   Nom:', createData.utilisateur.prenom, createData.utilisateur.nom);
    console.log('   R√¥le:', createData.utilisateur.role);
  } else {
    console.log('‚ö†Ô∏è Cr√©ation √©chou√©e (peut-√™tre d√©j√† existant):', createData.error);
  }
  
  console.log('\n2Ô∏è‚É£ Test de connexion...');
  
  // Test 2: Se connecter
  const loginResponse = await fetch('http://localhost:3000/api/auth/login', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      login: "chef_test",
      password: "test1234",
      role: "ChefDepartement"
    })
  });
  
  const loginData = await loginResponse.json();
  
  if (loginResponse.ok && loginData.success) {
    console.log('‚úÖ Connexion r√©ussie!');
    console.log('   Token:', loginData.token ? 'G√©n√©r√© ‚úì' : 'Non g√©n√©r√© ‚úó');
    console.log('   Utilisateur:', loginData.user.prenom, loginData.user.nom);
    console.log('   R√¥le:', loginData.user.role);
    console.log('   Est chef?:', loginData.user.est_chef_departement ? 'Oui ‚úì' : 'Non ‚úó');
    console.log('   D√©partement:', loginData.user.departement_nom || 'N/A');
    console.log('   ID D√©partement:', loginData.user.id_departement || 'N/A');
    
    // Test 3: V√©rifier /api/auth/me
    console.log('\n3Ô∏è‚É£ Test de r√©cup√©ration du profil...');
    
    const meResponse = await fetch('http://localhost:3000/api/auth/me', {
      method: 'GET',
      headers: {
        'Cookie': `token=${loginData.token}`
      }
    });
    
    const meData = await meResponse.json();
    
    if (meResponse.ok && meData.success) {
      console.log('‚úÖ Profil r√©cup√©r√©!');
      console.log('   R√¥le:', meData.user.role);
      console.log('   Est chef?:', meData.user.est_chef_departement ? 'Oui ‚úì' : 'Non ‚úó');
    } else {
      console.log('‚ùå √âchec r√©cup√©ration profil:', meData.message);
    }
    
    // Test 4: Acc√©der aux statistiques
    console.log('\n4Ô∏è‚É£ Test d\'acc√®s aux statistiques...');
    
    const statsResponse = await fetch(`http://localhost:3000/api/chefs-departement/statistiques?departementId=${loginData.user.id_departement}`, {
      method: 'GET',
      headers: {
        'Cookie': `token=${loginData.token}`
      }
    });
    
    const statsData = await statsResponse.json();
    
    if (statsResponse.ok && statsData.success) {
      console.log('‚úÖ Statistiques r√©cup√©r√©es!');
      console.log('   D√©partement:', statsData.data.departement.nom);
      console.log('   Enseignants:', statsData.data.nombre_enseignants);
      console.log('   √âtudiants:', statsData.data.nombre_etudiants);
      console.log('   Mati√®res:', statsData.data.nombre_matieres);
    } else {
      console.log('‚ùå √âchec statistiques:', statsData.error);
    }
    
  } else {
    console.log('‚ùå Connexion √©chou√©e!');
    console.log('   Message:', loginData.message);
    console.log('   Donn√©es compl√®tes:', JSON.stringify(loginData, null, 2));
  }
  
  console.log('\n‚ú® Tests termin√©s!\n');
}

// Ex√©cuter les tests
testChefLogin().catch(console.error);
