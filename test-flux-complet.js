/**
 * Test complet du flux de connexion Chef de D√©partement
 * Usage: node test-flux-complet.js
 */

const PORT = 3000; // Changez en 3001 si n√©cessaire
const BASE_URL = `http://localhost:${PORT}`;

async function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}

async function testFluxComplet() {
  console.log('\nüß™ TEST COMPLET - FLUX CHEF DE D√âPARTEMENT\n');
  console.log('‚ïê'.repeat(60));

  try {
    // √âTAPE 1: Login
    console.log('\nüìù √âTAPE 1: Connexion...\n');
    
    const loginResponse = await fetch(`${BASE_URL}/api/auth/login`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        login: 'chef_test',
        password: 'chef123456',
        role: 'ChefDepartement'
      })
    });

    if (!loginResponse.ok) {
      console.log('‚ùå √âchec du login');
      const error = await loginResponse.json();
      console.log('Erreur:', error);
      return;
    }

    const loginData = await loginResponse.json();
    
    if (!loginData.success) {
      console.log('‚ùå Login non r√©ussi');
      console.log('R√©ponse:', loginData);
      return;
    }

    console.log('‚úÖ Login r√©ussi!');
    console.log(`   ‚Ä¢ Utilisateur: ${loginData.user.prenom} ${loginData.user.nom}`);
    console.log(`   ‚Ä¢ R√¥le: ${loginData.user.role}`);
    console.log(`   ‚Ä¢ Chef?: ${loginData.user.est_chef_departement}`);
    console.log(`   ‚Ä¢ D√©partement: ${loginData.user.departement_nom}`);
    console.log(`   ‚Ä¢ Token pr√©sent: ${loginData.token ? 'OUI' : 'NON'}`);

    // R√©cup√©rer les cookies
    const cookies = loginResponse.headers.get('set-cookie');
    console.log(`   ‚Ä¢ Cookies d√©finis: ${cookies ? 'OUI' : 'NON'}`);

    if (!loginData.token) {
      console.log('\n‚ùå Pas de token re√ßu!');
      return;
    }

    // √âTAPE 2: V√©rifier /api/auth/me
    console.log('\nüìù √âTAPE 2: V√©rification de /api/auth/me...\n');
    
    await sleep(500); // Attendre un peu

    const meResponse = await fetch(`${BASE_URL}/api/auth/me`, {
      headers: {
        'Cookie': `token=${loginData.token}`
      }
    });

    if (!meResponse.ok) {
      console.log('‚ùå √âchec de /api/auth/me');
      const error = await meResponse.json();
      console.log('Erreur:', error);
      return;
    }

    const meData = await meResponse.json();

    if (!meData.success) {
      console.log('‚ùå /api/auth/me non r√©ussi');
      console.log('R√©ponse:', meData);
      return;
    }

    console.log('‚úÖ /api/auth/me r√©ussi!');
    console.log(`   ‚Ä¢ R√¥le retourn√©: ${meData.user.role}`);
    console.log(`   ‚Ä¢ Chef?: ${meData.user.est_chef_departement}`);
    console.log(`   ‚Ä¢ ID D√©partement: ${meData.user.id_departement}`);

    if (meData.user.role !== 'ChefDepartement') {
      console.log('\n‚ö†Ô∏è  ATTENTION: Le r√¥le devrait √™tre "ChefDepartement"!');
      console.log(`   R√¥le actuel: ${meData.user.role}`);
      return;
    }

    // √âTAPE 3: V√©rifier l'acc√®s aux statistiques
    console.log('\nüìù √âTAPE 3: V√©rification des statistiques...\n');

    const statsResponse = await fetch(
      `${BASE_URL}/api/chefs-departement/statistiques?departementId=${meData.user.id_departement}`,
      {
        headers: {
          'Cookie': `token=${loginData.token}`
        }
      }
    );

    if (!statsResponse.ok) {
      console.log('‚ö†Ô∏è  √âchec de r√©cup√©ration des statistiques');
      const error = await statsResponse.json();
      console.log('Erreur:', error);
    } else {
      const statsData = await statsResponse.json();
      
      if (statsData.success) {
        console.log('‚úÖ Statistiques accessibles!');
        console.log(`   ‚Ä¢ D√©partement: ${statsData.data.departement.nom}`);
        console.log(`   ‚Ä¢ Enseignants: ${statsData.data.nombre_enseignants}`);
        console.log(`   ‚Ä¢ √âtudiants: ${statsData.data.nombre_etudiants}`);
        console.log(`   ‚Ä¢ Mati√®res: ${statsData.data.nombre_matieres}`);
        console.log(`   ‚Ä¢ Sp√©cialit√©s: ${statsData.data.nombre_specialites}`);
      } else {
        console.log('‚ö†Ô∏è  Statistiques non disponibles');
      }
    }

    // R√âSUM√â
    console.log('\n' + '‚ïê'.repeat(60));
    console.log('‚úÖ TOUS LES TESTS SONT R√âUSSIS!\n');
    console.log('üéØ Prochaine √©tape: Tester dans le navigateur');
    console.log(`   1. Ouvrez: ${BASE_URL}/login`);
    console.log('   2. S√©lectionnez: Chef de D√©partement (carte orange)');
    console.log('   3. Connectez-vous avec:');
    console.log('      ‚Ä¢ Identifiant: chef_test');
    console.log('      ‚Ä¢ Mot de passe: chef123456');
    console.log('   4. Vous devriez √™tre redirig√© vers:');
    console.log('      /dashboard-chef-departement');
    console.log('‚ïê'.repeat(60));

  } catch (error) {
    console.log('\n‚ùå ERREUR CRITIQUE\n');
    console.error(error);
    console.log('\nüí° V√©rifiez que le serveur est lanc√©:');
    console.log(`   npm run dev`);
    console.log(`   et accessible sur ${BASE_URL}`);
  }

  console.log('\n');
}

testFluxComplet();
